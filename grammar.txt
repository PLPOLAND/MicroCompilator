<program>               -> PROGRAM <name> <optional declaration> BEGIN <optional statement> END.
<name>                  -> <ident>;
<optional declaration>  -> <declaration list> | NULL
<declaration list>      -> <declaration list> <declaration> | <declaration>
<declaration>           -> VAR <id list> : <type> ;
<id list>               -> <id list> , <ident> | <ident>
<type>                  -> INTEGER | REAL
<optional statement>    -> <statement list> | NULL
<statement list>        -> <statement list> <statement> | <statement>
<statement>             -> BEGIN <statement list> END; 
                         | <ident> := <expression>;
                         | READ( <id list>);
                         | WRITE( <expression list>);
                         | IF(<bool>) THEN <statement>
                         | WHILE(<bool>) DO <statement>
<expression list>       -> <expression list> , <expression> | <expression>
<expression>            -> <expression> + <term> | <expression> − <term> | <term>
<term>                  -> <term> * <factor> | <term> / <factor> | <factor>
<factor>                -> ( <expression> ) | <ident> | INTNUM | FLOATNUM
<ident>                 -> ID
<bool>                  -> <expression> <relation op> <expression>
<relation op>           -> < | = | > | <= | <> | >=


/*******************USUWANIE LEWEJ REKURENCJI************/


<program>               -> PROGRAM <name> <optional declaration> BEGIN <optional statement> END.
<name>                  -> <ident>;
<optional declaration>  -> <declaration list> | NULL

<declaration list>      -> <declaration> <declaration list tail>
<declaration list tail> -> NULL | <declaration> <declaration list tail>

<declaration>           -> VAR <id list> : <type> ;

<id list>               -> <ident> <id list tail>
<id list tail>          -> NULL | ,<ident> <id list tail>

<type>                  -> INTEGER | REAL

<optional statement>    -> <statement list> | NULL

<statement list>        -> <statement> <statement list tail> 
<statement list tail>   -> NULL | <statement> <statement list tail> 


<statement>             -> BEGIN <statement list> END; 
                         | <ident> := <expression>;
                         | READ( <id list>);
                         | WRITE( <expression list>);
                         | IF(<bool>) THEN <statement>
                         | WHILE(<bool>) DO <statement>

<expression list>       -> <expression> <expression list tail>
<expression list tail>  -> NULL | , <expression> <expression list tail>

<expression>            -> <term> <expression tail>
<expression tail>       -> NULL | + <term> <expression tail> | -<term> <expression tail>

<term>                  -> <factor> <term tail>
<term tail>             -> NULL | * <factor> <term tail> | / <factor> <term tail>

<factor>                -> ( <expression> ) | <ident> | INTNUM | FLOATNUM
<ident>                 -> ID
<bool>                  -> <expression> <relation op> <expression>
<relation op>           -> < | = | > | <= | <> | >=

/********************************FIRST SET***************************************************/

first(<program>)                = ["PROGRAM"]
first(<name>)                   = ["id"]
first(<optional declaration>)   = ["VAR", NULL]
first(<declaration list>)       = ["VAR"]
first(<declaration list tail>)  = ["VAR" ,NULL]
first(<declaration>)            = ["VAR"]
first(<id list>)                = ["id"]
first(<id list tail>)           = [",", NULL]
first(<type>)                   = ["INTEGER", "REAL"]
first(<optional statement>)     = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE"]
first(<statement list>)         = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE"]
first(<statement list tail>)    = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE", NULL]
first(<statement>)              = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE"]
first(<expression list>)        = ["(", "id", INTNUM, FLOATNUM]
first(<expression list tail)    = [",", NULL]
first(<expression>)             = ["(", "id", INTNUM, FLOATNUM]
first(<expression tail>)        = ["+", "-", NULL]
first(<term>)                   = ["(", "id", INTNUM, FLOATNUM]
first(<term tail>)              = ["*", "/", NULL]
first(<factor>)                 = ["(", "id", INTNUM, FLOATNUM]
first(<ident>)                  = ["id"]
first(<bool>)                   = ["(", "id", INTNUM, FLOATNUM]
first(<relation op>)            = ["<", "=" , ">", "<=", "<>", ">="]




/********************************FOLLOW SET (pierwsze przejscie)*******************************/
follow(<program>)               = ["$"]
follow(<name>)                  = ["VAR", "BEGIN"] 
follow(<optional declaration>)  = ["BEGIN"]
follow(<declaration list>)      = [] + follow(<optional declaration>)
follow(<declaration list tail>) = [] + follow(<declaration list>)
follow(<declaration>)           = ["VAR"] + follow(<declaration list>) + follow(<declaration list tail>)
follow(<id list>)               = [":", ")"]
follow(<id list tail>)          = [] + follow(<id list tail>)
follow(<type>)                  = [";"]
follow(<optional statement>)    = ["END."] 
follow(<statement list>)        = ["END;"] + follow(<optional statement>)
follow(<statement list tail>)   = [] + follow(<statement list>)
follow(<statement>)             = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE" ] + follow(<statement list>) + follow(<statement list tail>)
follow(<expression list>)       = [")"]
follow(<expression list tail>)  = [] + follow(<expression list>)
follow(<expression>)            = [";", ",", ")", "<", "=" , ">", "<=", "<>", ">="] + follow(<expression list>) + follow(<expression list tail>) + follow(<bool>)
follow(<expression tail>)       = [] + follow(<expression>)
follow(<term>)                  = ["+", "-"] + follow(<expression>)+ follow(<expression tail>)
follow(<term tail>)             = [] + follow(term)
follow(<factor>)                = ["*", "/"] + follow(<term>) + follow<term tail>)
follow(<ident>)                 = [";", ",", ":="] + follow(<id list>) + follow(<id list tail>) + follow(<factor>)
follow(<bool>)                  = [")"]
follow(<relation op>)           = ["(", "id", INTNUM, FLOATNUM,]


/********************************FOLLOW SET (Finalna zawartość)*******************************/
follow(<program>)               = ["$"]
follow(<name>)                  = ["VAR", "BEGIN"] 
follow(<optional declaration>)  = ["BEGIN"]
follow(<declaration list>)      = ["BEGIN"]
follow(<declaration list tail>) = ["BEGIN"]
follow(<declaration>)           = ["VAR", "BEGIN"]
follow(<id list>)               = [":", ")"]
follow(<id list tail>)          = [":", ")"] 
follow(<type>)                  = [";"]
follow(<optional statement>)    = ["END."] 
follow(<statement list>)        = ["END;", "END."]
follow(<statement list tail>)   = ["END;", "END."]
follow(<statement>)             = ["BEGIN", "id", "READ", "WRITE", "IF", "WHILE", "END;", "END." ]
follow(<expression list>)       = [")"]
follow(<expression list tail>)  = [")"]
follow(<expression>)            = [";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<expression tail>)       = [";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<term>)                  = ["+", "-", ";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<term tail>)             = ["+", "-", ";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<factor>)                = ["*", "/", "+", "-", ";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<ident>)                 = [":=", ":", "*", "/", "+", "-", ";", ",", ")", "<", "=" , ">", "<=", "<>", ">="]
follow(<bool>)                  = [")"]
follow(<relation op>)           = ["(", "id", INTNUM, FLOATNUM,]
